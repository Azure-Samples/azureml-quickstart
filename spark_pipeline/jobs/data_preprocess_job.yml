$schema: https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json
name: new_text_generation_datapreprocess
#version: 0.0.39
display_name: New Text Generation DataPreProcess
is_deterministic: True
type: command
description: Component to preprocess data for text generation task
inputs:
  train_file_path:
    type: uri_file
    optional: True
    description: Path to the registered training data asset. The supported data formats are `jsonl`, `json`, `csv`, `tsv` and `parquet`.
  validation_file_path:
    type: uri_file
    optional: True
    description: Path to the registered validation data asset. The supported data formats are `jsonl`, `json`, `csv`, `tsv` and `parquet`.
  test_file_path:
    type: uri_file
    optional: True
    description: Path to the registered test data asset. The supported data formats are `jsonl`, `json`, `csv`, `tsv` and `parquet`.
  train_mltable_path:
    type: mltable
    optional: True
    description: Path to the registered training data asset in `mltable` format.
  validation_mltable_path:
    type: mltable
    optional: True
    description: Path to the registered validation data asset in `mltable` format.
  test_mltable_path:
    type: mltable
    optional: True
    description: Path to the registered test data asset in `mltable` format.
  model_selector_output:
    type: uri_folder
    optional: False
    description: output folder of model selector containing model metadata like config, checkpoints, tokenizer config
  text_key:
    type: string
    optional: False
    description: key for text in an example. format your data keeping in mind that text is concatenated with ground_truth while finetuning in the form - text + groundtruth. for eg. "text"="knock knock\n", "ground_truth"="who's there"; will be treated as "knock knock\nwho's there"
  ground_truth_key:
    type: string
    optional: True
    description: key for ground_truth in an example. we take separate column for ground_truth to enable use cases like summarization, translation, question_answering, etc. which can be repurposed in form of text-generation where both text and ground_truth are needed. This separation is useful for calculating metrics. for eg. "text"="Summarize this dialog:\n{input_dialogue}\nSummary:\n", "ground_truth"="{summary of the dialogue}"
  batch_size:
    type: integer
    optional: True
    default: 1000
    description: Number of examples to batch before calling the tokenization function
  pad_to_max_length:
    type: string
    optional: True
    default: false
    description: If set to True, the returned sequences will be padded according to the model's padding side and padding index, up to their `max_seq_length`. If no `max_seq_length` is specified, the padding is done up to the model's max length.
    enum:
    - "true"
    - "false"
  max_seq_length:
    type: integer
    optional: True
    default: -1
    description: Default is -1 which means the padding is done up to the model's max length. Else will be padded to `max_seq_length`.
  system_properties:
    type: string
    optional: True
    description: Validation parameters propagated from pipeline.
outputs:
  output_dir:
    type: uri_folder
    description: The folder contains the tokenized output of the train, validation and test data along with the tokenizer files used to tokenize the data
code: ../src
environment: azureml://registries/azureml/environments/acft-hf-nlp-gpu/versions/46
resources:
  instance_count: 1
command: python preprocess.py --task_name TextGeneration --text_key '${{inputs.text_key}}' $[[--ground_truth_key '${{inputs.ground_truth_key}}']] $[[--batch_size '${{inputs.batch_size}}']] $[[--pad_to_max_length '${{inputs.pad_to_max_length}}']] $[[--max_seq_length '${{inputs.max_seq_length}}']] $[[--train_file_path '${{inputs.train_file_path}}']] $[[--validation_file_path '${{inputs.validation_file_path}}']] $[[--test_file_path '${{inputs.test_file_path}}']] $[[--train_mltable_path '${{inputs.train_mltable_path}}']] $[[--validation_mltable_path '${{inputs.validation_mltable_path}}']] $[[--test_mltable_path '${{inputs.test_mltable_path}}']] --model_selector_output '${{inputs.model_selector_output}}' $[[--system_properties '${{inputs.system_properties}}']] --output_dir '${{outputs.output_dir}}'